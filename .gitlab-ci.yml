include:
  - project: "wartek-id/tooling/cicd-templates"
    file: "stages.gitlab-ci.yml"
    ref: v3
  - project: "wartek-id/tooling/cicd-templates"
    file: "job-template.gitlab-ci.yml"
    ref: v3
  - project: wartek-id/frontend-toolings/component-library
    file: library-tracker-template.gitlab-ci.yaml
    ref: main
  - local: deployment.gitlab.yml

image: asia-southeast2-docker.pkg.dev/cde-cicd/remote-dockerhub/node:22

variables:
  NODE_CACHE_DIR: $CI_PROJECT_DIR/node_modules/
  GITLAB_AUTH_TOKEN: $CI_JOB_TOKEN
  PNPM_VERSION: 10.10.0
  SAST_EXCLUDED_PATHS: "**/*.test.*,**/*.spec.*"

# Common environment configurations
.env-config:
  variables: &common-env
    NODE_ENV: production

.env-staging:
  variables:
    <<: *common-env
    ENV: staging
    BASE_URL: https://cdn.rumah.staging.belajar.id/web/

.env-production:
  variables:
    <<: *common-env
    ENV: production
    BASE_URL: https://cdn.rumah.belajar.id/web/

before_script:
  - |
    if command -v npm > /dev/null; then
      npm install -g pnpm@$PNPM_VERSION
    fi

secret-detection:
  variables:
    EXCLUDED_FILES: "pnpm-lock.yaml|.*\\.spec\\..*|.*\\.test\\..*|."

.deployment-staging:
  rules:
    - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH"
    - if: "$CI_COMMIT_TAG =~ /release-staging-.+/"

.deployment-production:
  rules:
    - if: "$CI_COMMIT_TAG =~ /release-production.+/"

workflow:
  rules:
    - if: "$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS"
      when: never
    - if: '$CI_PIPELINE_SOURCE == "parent_pipeline"'
    - if: '$CI_PIPELINE_SOURCE == "trigger"'
    - if: '$CI_PIPELINE_SOURCE == "web"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: "$CI_COMMIT_BRANCH"
    - if: "$CI_COMMIT_TAG"

.cache-config:
  needs:
    - job: prepare
      optional: true
  before_script:
    - npm install -g pnpm@$PNPM_VERSION
    - "[[ -d node_modules ]] || pnpm install --frozen-lockfile"
  cache:
    key:
      files:
        - pnpm-lock.yaml
    paths:
      - $NODE_CACHE_DIR
    policy: pull

prepare:
  stage: before-ci
  needs: []
  tags:
    - himem
  script:
    - pnpm install --frozen-lockfile
  rules:
    - changes:
        - pnpm-lock.yaml
    - exists:
        - node_modules
      when: never
  cache:
    key:
      files:
        - pnpm-lock.yaml
    paths:
      - $NODE_CACHE_DIR

# Test stage
lint:
  stage: test
  script:
    # run pnpm install if eslint not found (force to ignore cache)
    - "[[ -d node_modules/eslint ]] || pnpm install --frozen-lockfile"
    - pnpm lint
  extends: .cache-config

test:
  stage: test
  tags:
    - himem
  script:
    # run pnpm install if vitest not found (force to ignore cache)
    - "[[ -d node_modules/vitest ]] || pnpm install --frozen-lockfile"
    - pnpm test
  extends: .cache-config

.build-app:
  extends: .cache-config
  needs:
    - job: prepare
      optional: true
  stage: build
  tags:
    - himem
  script:
    - cp $ENVS .env
    - pnpm build
  artifacts:
    untracked: false
    expire_in: 30 days
    paths:
      - build
      - node_modules

build-app-staging:
  environment:
    name: staging
    action: prepare
  extends:
    - .build-app
    - .env-staging
  rules:
    - !reference [.deployment-staging, rules]
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

build-app-production:
  environment:
    name: production
    action: prepare
  extends:
    - .build-app
    - .env-production
    - .deployment-production

.build-docker:
  extends:
    - .kaniko-template
  tags:
    - ultramem
  variables:
    KANIKO_ARGUMENTS_01: --build-arg GITLAB_AUTH_TOKEN=$CI_JOB_TOKEN
    KANIKO_ARGUMENTS_02: --build-arg NODE_ENV=$NODE_ENV
    KANIKO_ARGUMENTS_03: --build-arg VERSION=$CI_COMMIT_SHA
    KANIKO_ARGUMENTS_04: --build-arg APP_ENV=$ENV
    KANIKO_ARGUMENTS_05: --build-arg BASE_URL=$BASE_URL
    KANIKO_ARGUMENTS_06: --cache-ttl=12h
    KANIKO_ARGUMENTS_07: --cache=true
    KANIKO_ARGUMENTS_08: --cache-copy-layers=true
    # Ref: https://merdeka-belajar.slack.com/archives/C01FHM8LQKH/p1730433683076759?thread_ts=1730345296.035159&cid=C01FHM8LQKH
    KANIKO_ARGUMENTS_COMPRESSED_CACHING: --compressed-caching=false
    KANIKO_ARGUMENTS_SNAPSHOT_MODE: --snapshot-mode=redo
    DOCKERFILE: deployment/Dockerfile
    IMAGE_REPO: $CI_REGISTRY/rumah-pendidikan-frontend
    SERVICE_NAME: $ENV
    # Ref: https://wartek.atlassian.net/wiki/spaces/CLOUD/pages/2268365070/V3+Advanced+Configuration+Options#Disabling-Cache-During-Kaniko-Build
    DISABLE_CACHE: "true"

docker-build:
  stage: build
  extends:
    - .build-docker
    - .env-staging
    - .deployment-staging